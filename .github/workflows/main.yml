name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: terraform-pipeline
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1   

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3  

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=terraform-backend-chinna-123" \
            -backend-config="key=${GITHUB_HEAD_REF || github.ref_name}/terraform.tfstate" \
            -backend-config="region=us-east-2"

      - name: Terraform Validate
        run: terraform validate -no-color

      # -----------------------
      # PLAN
      # -----------------------
      - name: Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event_name == 'pull_request'
        id: plan
        run: terraform plan -no-color -input=false -out=tfplan.txt | tee plan_output.txt

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: plan_output.txt

      # -----------------------
      # APPLY
      # -----------------------
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply' && github.ref == 'refs/heads/main'
        run: terraform apply -input=false

      # -----------------------
      # DESTROY
      # -----------------------
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -input=false
